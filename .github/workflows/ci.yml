name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-lint:
    name: Build, Lint and Test
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Update ROS GPG key
      run: |
        # Remove the old key
        sudo apt-key del F42ED6FBAB17C654 2>/dev/null || true
        # Add the new key
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        # Update the sources list to use the new key
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
    
    - name: Setup ROS 2 Humble
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: humble
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-colcon-common-extensions \
          python3-rosdep \
          python3-vcstool \
          python3-pip
        
        # Install colcon plugins for cargo
        pip3 install colcon-cargo colcon-ros-cargo
        
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Install cargo-ament-build from Tier4
      run: |
        # Install to system cargo location to avoid conflicts
        sudo mkdir -p /usr/local/cargo/bin
        git clone https://github.com/tier4/cargo-ament-build.git
        cd cargo-ament-build
        cargo build --release
        sudo cp target/release/cargo-ament-build /usr/local/cargo/bin/
        # Make it available in PATH
        echo "/usr/local/cargo/bin" >> $GITHUB_PATH
    
    - name: Create workspace
      run: |
        mkdir -p ~/ws/src
        ln -s $GITHUB_WORKSPACE ~/ws/src/
        
    - name: Build with colcon
      run: |
        cd ~/ws
        source /opt/ros/humble/setup.bash
        # Ensure we use the correct cargo-ament-build
        export PATH="/usr/local/cargo/bin:$PATH"
        which cargo-ament-build
        colcon build --packages-select joy_msg_router_rs
        
    - name: Format check
      run: |
        cd ~/ws/src/joy_msg_router_rs
        source /opt/ros/humble/setup.bash
        cargo fmt -- --check
        
    - name: Clippy
      run: |
        cd ~/ws/src/joy_msg_router_rs
        source /opt/ros/humble/setup.bash
        cargo clippy -- -D warnings
        
    - name: Run tests
      run: |
        cd ~/ws
        source /opt/ros/humble/setup.bash
        source install/setup.bash
        colcon test --packages-select joy_msg_router_rs
        colcon test-result --verbose